##################################################
#BEGIN MY ADDITIONS
#Git purge file/folder
gitPurgeF(){

#git filter-branch --force --index-filter "git rm -r --cached --ignore-unmatched $1" --tag-name-filter cat -- --all
git rm --cached $1
git commit --amend -CHEAD
git push

}


#Reset Safari
resetSafari(){
#Preserve Bookmarks.plist
mv ~/Library/Safari/Bookmarks.plist ~/Desktop/Bookmarks.plist
mv ~/Library/Safari ~/Downloads/Safari-`date +%Y%m%d%H%M%S`
mkdir ~/Library/Safari
mv ~/Desktop/Bookmarks.plist ~/Library/Safari/Bookmarks.plist

}
# Easily extract all compressed file types
extract () {
   if [ -f $1 ] ; then
       case $1 in
           *.tar.bz2)   tar xvjf $1    ;;
           *.tar.gz)    tar xvzf $1    ;;
           *.bz2)       bunzip2 $1     ;;
           *.rar)       unrar x $1     ;;
           *.gz)        gunzip $1      ;;
           *.tar)       tar xvf $1     ;;
           *.tbz2)      tar xvjf $1    ;;
           *.tgz)       tar xvzf $1    ;;
           *.zip)       unzip $1       ;;
           *.Z)         uncompress $1  ;;
           *.7z)        7z x $1        ;;
           *)           echo "don't know how to extract '$1'..." ;;
       esac
   else
       echo "'$1' is not a valid file"
   fi
}
# Get weather data for a zip code
weather() {
    echo Checking weather for zip code: $1
    curl -s "http://api.wunderground.com/auto/wui/geo/ForecastXML/index.xml?query=${@:-$1}" | perl -ne 's/&amp;deg;/Â°/g;/<title>([^<]+)/&&printf "%s: ",$1;/<fcttext>([^<]+)/&&print $1,"\n"';
}
# Define a word using collinsdictionary.com
define() {
  curl -s "http://www.collinsdictionary.com/dictionary/english/$*" | sed -n '/class="def"/p' | awk '{gsub(/.*<span class="def">|<\/span>.*/,"");print}' | sed "s/<[^>]\+>//g";
}

# Epoch time conversion
epoch() {
  TESTREG="[\d{10}]"
  if [[ "$1" =~ $TESTREG ]]; then
    # is epoch
    date -d @$*
  else
    # is date
    if [ $# -gt 0 ]; then
      date +%s --date="$*"
    else
      date +%s
    fi
  fi
}

alias SD="sudo shutdown -r now"
alias vf="cd"
alias got="git"
alias ll=la


#ssh to git server
ip='96.228.181.194'
user='git'
alias deepspace='ssh $user@$ip'
alias ds=deepspace
alias lsds='ssh git@96.228.181.194 "ls"'

#circe
circeurl='circe.rc.usf.edu'
usfuser='rmcmillan1'
alias circe='ssh -Y $usfuser@$circeurl'
alias usf=circe
alias lsusf='ssh rmcmillan1@circe.rc.usf.edu "ls"'

#Mou shortcuts http://mouapp.com
alias mou="open -a Mou"

# git shortcuts
alias g="git "
alias got="git "
alias status="git status "
alias gs="git status "
alias ss="git status "
alias xx="ss "
alias commit="git commit -a "
alias push="git push "
alias pull="git pull "
alias tag="git tag "
alias pusht="git push --tags "
alias tags="git tags "
alias co="checkout "
alias gco="git checkout "
alias m="merge "
alias branch="git branch "
alias clone="git clone "
alias add="git add "
alias fir="git "
#exit terminal
alias x="exit"

alias under="cd ~/Under*"
alias cdv="cd /Volumes"
alias cdvioscreate="~/cordova-ios/bin/./create"
alias cdvosxcreate="~/cordova-osx/bin/./create"
#alias cdvcreate="~/ios/bin/./create"
alias cdme="cd ~/"
alias cdtf="cd ~/Library/Developer/Xcode/Templates/File\ Templates/"
alias prefs="cd ~/Library/Preferences"

#HomeBrew
alias forms="cd /usr/local/Library/Formula"

alias vim="/usr/local/bin/vim"
alias v=vim
#alias mm="open /usr/local/Cellar/macvim/7.4-94/MacVim.app"
alias mvim="/usr/local/bin/mvim"
alias mm=mvim
alias s="subl ."
alias o="open"
alias oo="open ."
alias ut="~/Library/Containers/com.apple.iWork.Pages/Data/Library/Application Support/User Templates"



#END MY ADDITIONS
##################################################
##################################################
#BEGIN MY ADDITIONS

# ssh randymcmillan@108.190.128.128
#bocmacmini
alias boc='bocmacmini'
function bocmacmini(){

bocurl='108.190.128.128'
me='git'
ssh $me@$bocurl

}

#ssh randymcm@siteground168.com -p 18765

#randymcmillan.net
alias rnet='randymcmillan'
function randymcmillan(){

rmurl='siteground168.com'
me='randymcm'
ssh $me@$rmurl -p 18765

}

#ssh rootsinr@siteground138.com -p 18765

#rootsinrecovery.com
alias rr='rootsinrecovery'
function rootsinrecovery(){

rmurl='siteground138.com'
me='rootsinr'
ssh $me@$rmurl -p 18765

}

function x2go(){
#cd /opt/homebrew-cask/Caskroom/x2goclient/latest/
#open x2goclient.app/

open /opt/homebrew-cask/Caskroom/x2goclient/latest/./x2goclient.app

}
alias x2='x2go'

alias pt='pipeTree'
#pipe tree
function pipeTree(){

ls -R1 /path |
  while read l; do case $l in *:) d=${l%:};; "") d=;; *) echo "$d/$l";; esac; done

}

#return local foldername
function folderName(){
    dest=$PWD;
    f="${dest##*/}";
    echo "${f}"
    }
alias fn=folderName

#makeRemote
function makeRemote(){
    dest=$PWD".git";
    f="${dest##*/}";
    ssh git@96.228.181.194 "git init --bare ${f}";
}
alias makeremote=makeRemote

#testRemote
function testRemote(){
     dest=$PWD".git";
     echo $dest;
     f="${dest##*/}";
    git ls-remote ssh://git@96.228.181.194/Users/git/${f} &>-
    if [ "$?" -ne 0 ]; then
    echo "[ERROR] Unable to read from " git ls-remote ssh://git@96.228.181.194/Users/git/${f}
    else
    return "$?"
    fi
}

#myfunc
#echo myresult = $myresult
function myfunc()
{
    myresult='some value'
}
#myfunc
#echo myresult = $myresult
#forceOrigin
function forceOrigin(){
    dest=$PWD".git";
    f="${dest##*/}";
    git ls-remote --get-url ssh://git@96.228.181.194/Users/git/${f} #&>-
    if [ "$?" -ne 0 ]; #fail test
        then
        git remote -v
        echo failed to read remote
        makeRemote;forceOrigin;
        else
            echo succeeded to read
            echo adding remote deepspace repository
            git remote add deepspace ssh://git@96.228.181.194/Users/git/${f};
            echo setting remote url
            git remote set-url --origin ssh://git@96.228.181.194/Users/git/${f};
            git remote -v
        fi
    git ls-remote --get-url https://github.com/randymcmillan/${f} #&>-
    if [ "$?" -ne 0 ]; #fail test
        then
        git remote -v
        echo failed to read remote
        makeRemote;forceOrigin;
        else
            echo succeeded to read
            echo adding remote github repository
            git remote add github https://github.com/randymcmillan/${f};
            echo setting remote url
            git remote set-url --addurl origin ssh://git@96.228.181.194/Users/git/${f};
            git remote -v
        fi


}
alias forceorigin=forceOrigin
alias fo=forceorigin


#forceLocal
function forceLocal(){
    dest=$PWD".git";
    f="${dest##*/}";
    git ls-remote --get-url ssh://git@192.168.1.10/Users/git/${f} #&>-
    if [ "$?" -ne 0 ]; #fail test
        then
        git remote -v
        echo failed to read remote
        makeRemote;forceOrigin;
        else
            echo succeeded to read
            echo adding "local" deepspace repository
            git remote add deepspace ssh://git@192.168.1.10/Users/git/${f};
            echo setting remote url
            git remote set-url --origin ssh://git@192.168.1.10/Users/git/${f};
            git remote -v
        fi
    git ls-remote --get-url https://github.com/randymcmillan/${f} #&>-
    if [ "$?" -ne 0 ]; #fail test
        then
        git remote -v
        echo failed to read remote
        makeRemote;forceOrigin;
        else
            echo succeeded to read
            echo adding remote github repository
            git remote add github https://github.com/randymcmillan/${f};
            echo setting remote url
            git remote set-url --addurl local ssh://git@192.168.1.10/Users/git/${f};
            git remote -v
        fi


}
alias forcelocal=forceLocal
alias fl=forcelocal

alias spoofMacAddress="openssl rand -hex 1 | tr '[:lower:]' '[:upper:]' | xargs echo 'obase=2;ibase=16;' | bc | cut -c1-6 | sed 's/$/00/' | xargs echo 'obase=16;ibase=2;' | bc | sed 's/$/:$(openssl rand -hex 5 | sed 's/\(..\)/\1:/g; s/.$//' | tr '[:lower:]' '[:upper:]')/' | xargs sudo ifconfig en0 ether"
# Spoof MAC Address
function spoof(){
spoofMacAddress; reportMacAddress
}

function reportMacAddress(){


    ifconfig en0 | grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'

}



#END MY ADDITIONS
##################################################
